unit GeraBoleto.Banco001;

interface

uses GeraBoleto.Boleto, GeraBoleto.Base;

const
  DIGITO_NUM = '9';

type
  TFormata001 = class(TInterfacedObject, IFormatacao)
  private
    FBoleto: IBoleto;
  public
    constructor Create(ABoleto: IBoleto);
    procedure FormataCamposConta;
    procedure ValidaDados;
    procedure FormataCampoLivre;
  end;

  TFactoryBBFormata = class
  public
    class function GetFormatacaoCampoLivre(AConvenio: string): IFormataCampoLivre;
  end;

  TBBConvenio4 = class(TInterfacedObject, IFormataCampoLivre)
  public
    procedure Formata(ABoleto: IBoleto);
  end;

  TBBConvenio6 = class(TInterfacedObject, IFormataCampoLivre)
  public
    procedure Formata(ABoleto: IBoleto);
  end;

  TBBConvenio7 = class(TInterfacedObject, IFormataCampoLivre)
  public
    procedure Formata(ABoleto: IBoleto);
  end;

implementation

uses
  System.SysUtils, GeraBoleto.Funcoes;

{ TFactoryBBFormataNossoNumero }

class function TFactoryBBFormata.GetFormatacaoCampoLivre(AConvenio: string): IFormataCampoLivre;
begin
  case AConvenio.Length of
    4: Result := TBBConvenio4.Create;
    6: Result := TBBConvenio6.Create;
    7: Result := TBBConvenio7.Create;
  else
    raise Exception.Create('Convênio inválido!');
  end;
end;

{ TBBConvenio4 }

procedure TBBConvenio4.Formata(ABoleto: IBoleto);
begin
//  ABoleto.GetTitulo.NossoNum := ABoleto.GetConta.Convenio +
//      LeftPad(ABoleto.GetConta.SeqNossoNumero.ToString, 7);

  ABoleto.SetCampoLivre( ABoleto.GetTitulo.NossoNum + ABoleto.GetConta.Agencia +
    ABoleto.GetConta.Conta + ABoleto.GetConta.Carteira );
end;

{ TBBConvenio6 }

procedure TBBConvenio6.Formata(ABoleto: IBoleto);
begin
  ABoleto.GetTitulo.NossoNum := ABoleto.GetConta.Convenio +
      LeftPad(ABoleto.GetConta.SeqNossoNumero.ToString, 5);

  ABoleto.SetCampoLivre( ABoleto.GetTitulo.NossoNum + ABoleto.GetConta.Agencia +
    ABoleto.GetConta.Conta + ABoleto.GetConta.Carteira );
end;

{ TBBConvenio7 }

procedure TBBConvenio7.Formata(ABoleto: IBoleto);
begin
  ABoleto.GetTitulo.NossoNum := ABoleto.GetConta.Convenio +
      LeftPad(ABoleto.GetConta.SeqNossoNumero.ToString, 10);

  ABoleto.SetCampoLivre( LeftPad('0', 6) + ABoleto.GetTitulo.NossoNum + ABoleto.GetConta.Carteira );
end;

{ TFormata001 }

constructor TFormata001.Create(ABoleto: IBoleto);
begin
  FBoleto := ABoleto;
end;

procedure TFormata001.FormataCampoLivre;
var
  FormatacaoCampoLivre: IFormataCampoLivre;
begin
  FormatacaoCampolivre := TFactoryBBFormata.GetFormatacaoCampoLivre(FBoleto.GetConta.Convenio);
  FormatacaoCampoLivre.Formata(FBoleto);
end;

procedure TFormata001.FormataCamposConta;
begin
  FBoleto.GetConta.Agencia := LeftPad(FBoleto.GetConta.Agencia, 4);
  FBoleto.GetConta.Conta := LeftPad(FBoleto.GetConta.Conta, 8);
end;

procedure TFormata001.ValidaDados;
begin
  if FBoleto.GetConta.Banco.DigitoNumero <> DIGITO_NUM then
    raise Exception.Create('Dígito do Número do Banco inválido!');
  if not IsNumber( FBoleto.GetConta.Conta ) then
    raise Exception.Create('Número da Conta inválido!');
end;

end.
