unit Conta;

interface

uses
  Banco, SysUtils;

type
  IConta = interface
    ['{E84BF875-7CCA-4B45-9CD4-B211017602DE}']
    function GetAgencia: string;
    function GetBanco: TBanco;
    function GetCarteira: string;
    function GetConta: string;
    function GetDigitoAgencia: string;
    function GetDigitoConta: string;
    function GetLocalPagto: string;
    function GetConvenio: string;

    procedure SetAgencia(const Value: string);
    procedure SetBanco(const Value: TBanco);
    procedure SetCarteira(const Value: string);
    procedure SetConta(const Value: string);
    procedure SetDigitoAgencia(const Value: string);
    procedure SetDigitoConta(const Value: string);
    procedure SetLocalPagto(const Value: string);
    procedure SetConvenio(const Value: string);

    property Banco: TBanco read GetBanco write SetBanco;
    property LocalPagto: string read GetLocalPagto write SetLocalPagto;
    property Agencia: string read GetAgencia write SetAgencia;
    property DigitoAgencia: string read GetDigitoAgencia write SetDigitoAgencia;
    property Conta: string read GetConta write SetConta;
    property DigitoConta: string read GetDigitoConta write SetDigitoConta;
    property Carteira: string read GetCarteira write SetCarteira;
    property Convenio: string read GetConvenio write SetConvenio;
  end;

  TConta = class(TInterfacedObject, IConta)
  private
    FBanco: TBanco;
    FLocalPagto: string;
    FAgencia: string;
    FDigitoConta: string;
    FConta: string;
    FCarteira: string;
    FDigitoAgencia: string;
    FConvenio: string;

  public
    constructor Create;
    destructor Destroy; override;

    function GetAgencia: string;
    function GetBanco: TBanco;
    function GetCarteira: string;
    function GetConta: string;
    function GetDigitoAgencia: string;
    function GetDigitoConta: string;
    function GetLocalPagto: string;
    function GetConvenio: string;

    procedure SetAgencia(const Value: string);
    procedure SetBanco(const Value: TBanco);
    procedure SetCarteira(const Value: string);
    procedure SetConta(const Value: string);
    procedure SetDigitoAgencia(const Value: string);
    procedure SetDigitoConta(const Value: string);
    procedure SetLocalPagto(const Value: string);
    procedure SetConvenio(const Value: string);

    property Banco: TBanco read GetBanco write SetBanco;
    property LocalPagto: string read GetLocalPagto write SetLocalPagto;
    property Agencia: string read GetAgencia write SetAgencia;
    property DigitoAgencia: string read GetDigitoAgencia write SetDigitoAgencia;
    property Conta: string read GetConta write SetConta;
    property DigitoConta: string read GetDigitoConta write SetDigitoConta;
    property Carteira: string read GetCarteira write SetCarteira;
    property Convenio: string read GetConvenio write SetConvenio;
  end;

implementation

{ TConta }

constructor TConta.Create;
begin
  FBanco := TBanco.Create;
end;

destructor TConta.Destroy;
begin
  FBanco.Free;
  inherited;
end;

function TConta.GetAgencia: string;
begin
  Result := FAgencia;
end;

function TConta.GetBanco: TBanco;
begin
  Result := FBanco;
end;

function TConta.GetCarteira: string;
begin
  Result := FCarteira;
end;

function TConta.GetConta: string;
begin
  Result := FConta;
end;

function TConta.GetConvenio: string;
begin
  Result := FConvenio;
end;

function TConta.GetDigitoAgencia: string;
begin
  Result := FDigitoAgencia;
end;

function TConta.GetDigitoConta: string;
begin
  Result := FDigitoConta;
end;

function TConta.GetLocalPagto: string;
begin
  Result := FLocalPagto;
end;

procedure TConta.SetAgencia(const Value: string);
begin
  FAgencia := Trim(Value);
end;

procedure TConta.SetBanco(const Value: TBanco);
begin
  FBanco := Value;
end;

procedure TConta.SetCarteira(const Value: string);
begin
  FCarteira := Value;
end;

procedure TConta.SetConta(const Value: string);
begin
  FConta := Trim(Value);
end;

procedure TConta.SetConvenio(const Value: string);
begin
  FConvenio := Trim(Value);
end;

procedure TConta.SetDigitoAgencia(const Value: string);
begin
  FDigitoAgencia := Trim(Value);
end;

procedure TConta.SetDigitoConta(const Value: string);
begin
  FDigitoConta := Trim(Value);
end;

procedure TConta.SetLocalPagto(const Value: string);
begin
  FLocalPagto := Value;
end;

end.
